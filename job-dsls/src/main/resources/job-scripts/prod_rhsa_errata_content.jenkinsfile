@Library('jenkins-pipeline-shared-libraries')_

node {
    stage('Print variables') {
        println "[INFO] PRODUCT_NAME: ${PRODUCT_NAME}"
        println "[INFO] PRODUCT_VERSION: ${PRODUCT_VERSION}"
        println "[INFO] JIRA_SEARCH_URL: ${JIRA_SEARCH_URL}"
    }

    stage('Print RHSA Errata content') {
        withCredentials([string(credentialsId: 'jira-token', variable: 'JIRA_TOKEN')]) {
            def inputStream = jira.getCVEsFromRelease(PRODUCT_NAME, PRODUCT_VERSION, JIRA_SEARCH_URL, JIRA_TOKEN)
            def cveList = rhsaErrata.getCVEList(inputStream.text)
            if (cveList.isEmpty()) {
                println 'No security Jira was found for the given product and version.'
            } else {
                rhsaErrata.printRHSAReport(cveList)
            }
        }
    }
}