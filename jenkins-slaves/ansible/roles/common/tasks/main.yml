---
### RPM repositories ###

- name: Copy Pulp repos config
  copy:
    src: data/config/pulp/pulp.repo
    dest: /etc/yum.repos.d/pulp.repo
    owner: root
    group: root
    mode: 0644

- name: Install EPEL7 repository
  yum:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    state: present

- name: Install packages
  yum:
    pkg: ['git', 'tig', 'wget', 'mc', 'vim', 'unzip', 'iputils', 'bind-utils', 'findutils',
          'htop', 'hub', 'screen', 'lsof', 'bash-completion', 'bzip2', 'rng-tools',
          'ansible', 'zip', 'python2-pip', 'jq', 'libXScrnSaver', 'python3', 'python3-devel',
          'python3-pip', 'glibc-devel', 'zlib-devel', 'podman', 'gcc', 'krb5-devel', 'libstdc++-static']
    state: latest

- name: Update all packages
  yum:
    name: "*"
    state: latest

### System services ###

- name: Start and enable RNGD Service
  service:
    name: rngd
    state: started
    enabled: true

### Jenkins user ###

- name: Add user jenkins
  user:
    name: jenkins
    # droolsjbpm.ci1
    password: $6$rounds=656000$skw/fVgypJZWP8m1$04UK6Ax4.2hhJfcCbgGegNGl0brQtufYJd4lGn4Lw2RnZ8GQL50crLAd/PIU/.JC047TLybYfcdLL/27hkwlx0
    state: present

- name: Create ~/.ssh directory
  file:
    path: /home/jenkins/.ssh
    state: directory
    owner: jenkins
    group: jenkins

- name: Copy SSH authorized_keys file
  copy:
    src: data/config/ssh/authorized_keys
    dest: /home/jenkins/.ssh/authorized_keys
    owner: jenkins
    group: jenkins
    mode: 0644

### Tools ###

- name: Create tools directory
  file:
    path: /opt/tools
    state: directory
    recurse: yes
    owner: root
    group: root

- name: Create tmp downloads directory
  file:
    path: /tmp/downloads
    state: directory
    owner: root
    group: root

- name: Create extras packages directory
  file:
    path: /opt/tools/extras/
    state: directory
    owner: jenkins
    group: jenkins

### JDK ###

- name: Download JDK archives
  get_url:
    url: "{{ item }}"
    dest: /tmp/downloads/
    validate_certs: no
  with_items:
    - "{{ jdk_download_urls }}"

- name: Extract JDK archives
  unarchive:
    src: /tmp/downloads/jdk-{{ item }}-linux-x64.tar.gz
    dest: /opt/tools
    copy: no
    owner: root
    group: root
  with_items:
   - "{{ jdk_short_versions }}"

- name: Create JDK symlinks
  file:
    src: /opt/tools/{{ item.0 }}
    dest: /opt/tools/{{ item.1 }}
    state: link
    follow: no
    mode: 0644
  with_together:
  - "{{ jdk_long_versions }}"
  - "{{ jdk_symlink_names }}"

- name: Remove JDK cacerts
  file:
    path: /opt/tools/{{ item.0 }}/{{ item.1 }}
    state: absent
    follow: no
  with_together:
    - "{{ jdk_long_versions }}"
    - "{{ jdk_cacerts_subdirs }}"

- name: Create JDK cacerts symlinks to system cert store
  file:
    src: /etc/pki/java/cacerts
    dest: /opt/tools/{{ item.0 }}/{{ item.1 }}
    state: link
    follow: no
    mode: 0644
  with_together:
    - "{{ jdk_long_versions }}"
    - "{{ jdk_cacerts_subdirs }}"

### Maven ###

- name: Dowload Maven archives
  get_url:
    url: https://archive.apache.org/dist/maven/maven-3/{{ item }}/binaries//apache-maven-{{ item }}-bin.tar.gz
    dest: /tmp/downloads/
    owner: root
    group: root
  with_items:
   - "{{ maven_versions }}"

- name: Extract Maven archives
  unarchive:
    copy: no
    src: /tmp/downloads/apache-maven-{{ item }}-bin.tar.gz
    dest: /opt/tools
    owner: root
    group: root
  with_items:
    - "{{ maven_versions }}"

### GraalVM ###

- name: Dowload GraalVM archives
  get_url:
    url: https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-{{graalvm_version}}/graalvm-ce-java11-linux-amd64-{{graalvm_version}}.tar.gz
    dest: /tmp/downloads/
    owner: jenkins
    group: jenkins

- name: Create graalvm directory
  file:
    path: /opt/tools/graalvm
    state: directory

- name: Extract GraalVM archives
  unarchive:
    copy: no
    src: /tmp/downloads/graalvm-ce-java11-linux-amd64-{{graalvm_version}}.tar.gz
    dest: /opt/tools/graalvm
    extra_opts: [--strip-components=1]
    owner: jenkins
    group: jenkins

- name: Install native-image
  command: "/opt/tools/graalvm/bin/gu install native-image"

### Operator-sdk ###

- name: Install Operator-sdk
  get_url:
    url: https://github.com/operator-framework/operator-sdk/releases/download/{{operator_sdk_version}}/operator-sdk-{{operator_sdk_version}}-x86_64-linux-gnu
    dest: /opt/tools/extras/operator-sdk
    mode: '0755'

### Golang ###
- name: Download golang archives
  get_url:
    url: https://dl.google.com/go/go{{golang_version}}.linux-amd64.tar.gz
    dest: /tmp/downloads/
    owner: jenkins
    group: jenkins
- name: Extract Golang archives
  unarchive:
    copy: no
    src: /tmp/downloads/go{{golang_version}}.linux-amd64.tar.gz
    dest: /opt/tools/
    owner: jenkins
    group: jenkins

- name: Create GOPATH directory
  file:
    path: /home/jenkins/go/
    state: directory
    owner: jenkins
    group: jenkins

### Mercurial ###
- name: Download Mercurial archives
  get_url:
    url: https://www.mercurial-scm.org/release/mercurial-{{mercurial_version}}.tar.gz
    dest: /tmp/downloads/
    owner: jenkins
    group: jenkins

- name: Create mercurial directory
  file:
    path: /opt/tools/mercurial
    state: directory

- name: Extract Mercurial archives
  unarchive:
    copy: no
    src: /tmp/downloads/mercurial-{{mercurial_version}}.tar.gz
    dest: /opt/tools/mercurial
    extra_opts: [--strip-components=1]
    owner: jenkins
    group: jenkins

### Source-to-image ###
- name: Download s2i archives
  get_url:
    url: https://github.com/openshift/source-to-image/releases/download/v1.3.0/source-to-image-v1.3.0-eed2850f-linux-amd64.tar.gz
    dest: /tmp/downloads/
    owner: jenkins
    group: jenkins
- name: Extract s2i archives
  unarchive:
    copy: no
    src: /tmp/downloads/source-to-image-v1.3.0-eed2850f-linux-amd64.tar.gz
    dest: /opt/tools/extras/
    owner: jenkins
    group: jenkins

### Openshift-client ###
- name: Download openshift-utils archives
  get_url:
    url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{openshift_clients_version}}/openshift-client-linux-{{openshift_clients_version}}.tar.gz
    dest: /tmp/downloads/
    owner: jenkins
    group: jenkins

- name: Extract openshift-client archives
  unarchive:
    copy: no
    src: /tmp/downloads/openshift-client-linux-{{openshift_clients_version}}.tar.gz
    dest: /opt/tools/extras/
    owner: jenkins
    group: jenkins

### Packer ###

- name: Create Packer folder
  file:
    path: /opt/packer/bin/
    state: directory

- name: Download Packer
  get_url:
    url: https://rhba-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/userContent/packer
    dest: /opt/packer/bin/
    validate_certs: no

- name: Set Packer permissions
  file:
    path: /opt/packer/bin/packer
    mode: 0755

### Swap ###

- name: Create swap file
  command: dd if=/dev/zero of=/swapfile bs=1M count=8192

- name: Change swap file permissions
  file: path="/swapfile"
    owner=root
    group=root
    mode=0600

- name: Make swap fs
  command: "mkswap /swapfile"

- name: Add swap entry in fstab
  mount: name=none
    src=/swapfile
    fstype=swap
    opts=sw
    passno=0
    dump=0
    state=present
...
